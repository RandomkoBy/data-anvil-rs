use eframe::egui;
use super::Screen;

pub fn show(ui: &mut egui::Ui, current_screen: &mut Screen) {
    ui.vertical_centered(|ui| {
        ui.add_space(50.0);
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        ui.heading("üõ†Ô∏è Rust Utilities");
        ui.add_space(20.0);
        ui.label("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ç–∏–ª–∏—Ç—É:");
        ui.add_space(30.0);
        
        // –°–µ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —É—Ç–∏–ª–∏—Ç
        ui.horizontal(|ui| {
            ui.add_space(50.0);
            ui.vertical(|ui| {
                // –ö–Ω–æ–ø–∫–∞ XML to JSON
                if ui.add_sized([200.0, 80.0], egui::Button::new("üîÑ XML ‚Üí JSON\n–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è XML –≤ JSON")).clicked() {
                    *current_screen = Screen::XmlToJson;
                }
                
                ui.add_space(20.0);
                
                // –ö–Ω–æ–ø–∫–∞ UUID Generator
                if ui.add_sized([200.0, 80.0], egui::Button::new("üÜî UUID Generator\n–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID")).clicked() {
                    *current_screen = Screen::UuidGenerator;
                }
            });
            
            ui.add_space(50.0);
            
            ui.vertical(|ui| {
                // –ó–∞–≥–æ—Ç–æ–≤–∫–∏ –¥–ª—è –±—É–¥—É—â–∏—Ö —É—Ç–∏–ª–∏—Ç
                ui.add_sized([200.0, 80.0], egui::Button::new("üîê Password Gen\n(Coming Soon)").wrap(false));
                
                ui.add_space(20.0);
                
                ui.add_sized([200.0, 80.0], egui::Button::new("üìä File Analyzer\n(Coming Soon)").wrap(false));
            });
        });
    });
}